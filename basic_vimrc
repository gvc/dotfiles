let mapleader=" "
let maplocalleader="\\"

if &compatible
  set nocompatible
endif

if !exists('g:syntax_on')
  syntax enable
endif

filetype plugin indent on

" FAST VIM!
set lazyredraw
set ttyfast
set ttyscroll=3

nnoremap 0 ^

inoremap jj <ESC>
inoremap <C-Return> <CR><CR><C-o>k<Tab>

" Makes sure VIM doesn't add stuff on the cwd
set backupdir=$HOME/.vim/backups
set directory=$HOME/.vim/swaps

" Show line numbers with a width of 5
set number
set relativenumber
set numberwidth=2

set gdefault " Always substitute globaly

set splitbelow " Horizontal splits go below the current pane
set splitright " Vertical splits do to the right of the current pane

set wildignore=*.swp,*.bak,*.pyc,*.class "Ignore .pyc files and other tmp

set tildeop " Makes ~ behave like an operator

" I want tab to be of witdth 2 and never really be a tab
set expandtab
set shiftwidth=2
set softtabstop=2

set timeoutlen=1000 ttimeoutlen=0
set esckeys

set showmatch " highlights matching [{()}]

" Searching enhancements
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set ignorecase
" Always keep search results in the center.
nnoremap N Nzz
nnoremap n nzz
nnoremap <leader>s :nohlsearch<CR>

" Strip trailing whitespace
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

syntax enable
set t_Co=256
set term=screen-256color
set background=dark
colorscheme gruvbox

" hi Visual ctermbg=103 ctermfg=NONE

" Change cursor shape between insert and normal mode in iTerm3.app
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

set clipboard=unnamedplus
