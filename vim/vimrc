" HACK: https://github.com/vim/vim/issues/3117
if has('python3')
  silent! python3 1
endif

runtime macros/matchit.vim

let mapleader=" "
let maplocalleader="\\"

if &compatible
  set nocompatible
endif

if !exists('g:syntax_on')
  syntax enable
endif

filetype plugin indent on

" FAST VIM!
set lazyredraw
set ttyfast
set ttyscroll=3

nnoremap 0 ^

inoremap jj <ESC>
inoremap <C-Return> <CR><CR><C-o>k<Tab>

nnoremap <leader><leader> <c-^>
nnoremap <leader>rc :tabedit ~/.vimrc<CR>
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gc :Gcommit<CR>
nnoremap <leader>gdi :Gdiff<CR>
nnoremap <leader>w :w<CR>

" Folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

" Makes sure VIM doesn't add stuff on the cwd
set backupdir=$HOME/.vim/backups
set directory=$HOME/.vim/swaps

" Show line numbers with a width of 5
set number
set relativenumber
set numberwidth=2

set gdefault " Always substitute globaly

" set cursorline "Highlights the current line
" set colorcolumn=80

set splitbelow " Horizontal splits go below the current pane
set splitright " Vertical splits do to the right of the current pane

set wildignore=*.swp,*.bak,*.pyc,*.class "Ignore .pyc files and other tmp

set tildeop " Makes ~ behave like an operator

" I want tab to be of witdth 2 and never really be a tab
set expandtab
set shiftwidth=2
set softtabstop=2

set timeoutlen=1000 ttimeoutlen=0
set esckeys

set showmatch " highlights matching [{()}]

" Searching enhancements
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set ignorecase
" Always keep search results in the center.
nnoremap N Nzz
nnoremap n nzz
nnoremap <leader>s :nohlsearch<CR>

set packpath^=~/.vim
packadd minpac
call minpac#init()
call minpac#add('k-takata/minpac', {'type': 'opt'})

call minpac#add('dracula/vim')
call minpac#add('morhetz/gruvbox')

call minpac#add('ctrlpvim/ctrlp.vim')
call minpac#add('christoomey/vim-tmux-navigator')
call minpac#add('jiangmiao/auto-pairs')
call minpac#add('tpope/vim-surround')
call minpac#add('tpope/vim-repeat')
call minpac#add('tpope/vim-endwise')
call minpac#add('tpope/vim-fugitive')
call minpac#add('tpope/vim-commentary')
call minpac#add('tpope/vim-rails')
call minpac#add('tpope/vim-speeddating')
call minpac#add('tpope/vim-fugitive')
call minpac#add('kana/vim-textobj-user')
call minpac#add('kana/vim-textobj-entire')
call minpac#add('nelstrom/vim-textobj-rubyblock')
call minpac#add('kchmck/vim-coffee-script')
call minpac#add('rking/ag.vim')
call minpac#add('mattn/emmet-vim')
call minpac#add('vim-airline/vim-airline')
call minpac#add('vim-airline/vim-airline-themes')
call minpac#add('honza/vim-snippets')
call minpac#add('sirver/ultisnips')
call minpac#add('vim-ruby/vim-ruby')
call minpac#add('machakann/vim-highlightedyank')
" Elixir
call minpac#add('elixir-lang/vim-elixir')
call minpac#add('slashmili/alchemist.vim')

" Java
call minpac#add('Dinduks/vim-java-get-set')

" Linter
call minpac#add('w0rp/ale')

" Tags
call minpac#add('ludovicchabant/vim-gutentags')
let g:gutentags_cache_dir = '~/.tags_cache'

" These two go together because they are related to tests.
call minpac#add('janko-m/vim-test')
call minpac#add('christoomey/vim-tmux-runner')

call minpac#add('chrisbra/csv.vim')

command! PackUpdate source $MYVIMRC | call minpac#update()
command! PackClean  source $MYVIMRC | call minpac#clean()

" Make CtrlP use ag for listing the files. Way faster and no useless files.
" let g:ctrlp_user_command = 'ag %s -l -Q --hidden --nocolor --ignore-dir _build -g ""'
" let g:ctrlp_use_caching = 1
" let g:ctrlp_cache_dir = $HOME.'/.cache/ctrlp'
let g:ctrlp_user_command = 'rg %s --files --color=never --hidden --glob "!/.git"'
let g:ctrlp_lazy_update = 2

" Netwr better list style
let g:netrw_liststyle=3

" Set airline theme
let g:airline_theme='gruvbox'

let g:ale_linters = {
\   'ruby': ['reek', 'ruby'],
\}


" Configuring highlightedyank
map y <Plug>(highlightedyank)
" let g:highlightedyank_highlight_duration = 500

" Strip trailing whitespace
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

syntax enable
set t_Co=256
set term=screen-256color
set background=dark
colorscheme gruvbox

" hi Visual ctermbg=103 ctermfg=NONE

" Change cursor shape between insert and normal mode in iTerm3.app
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Configure tests
let test#strategy = "vtr"
nnoremap <silent> <leader>t :TestNearest<CR>
nnoremap <silent> <leader>T :TestFile<CR>
nnoremap <silent> <leader>a :TestSuite<CR>
nnoremap <silent> <leader>l :TestLast<CR>
nnoremap <silent> <leader>g :TestVisit<CR>

map <leader>ct :silent !ctags -R .<CR>:redraw!<CR>
map <leader>rl :source ~/.vimrc<CR>

" OS Specific configurations
let running_system = system("uname")

set clipboard=unnamed

" On MacOs turns out Vim + Ruby is faster is this is left off
set regexpengine=1

" Sets invisibles to white for easy spotting
highlight NonText guifg=#ffffff
highlight SpecialKey guifg=#ffffff

nmap <leader>l :set list!<CR>

" Copy the file path to the clipboard
" relative path (src/foo.txt)
nnoremap <leader>cf :let @+=expand("%")<CR>

" absolute path (/something/src/foo.txt)
nnoremap <leader>cF :let @+=expand("%:p")<CR>
